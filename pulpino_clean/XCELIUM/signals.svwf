
#
# Mnemonic Maps
#
mmap new  -reuse -name {Boolean as Logic} -radix %b -contents {{%c=FALSE -edgepriority 1 -shape low}
{%c=TRUE -edgepriority 1 -shape high}}
mmap new  -reuse -name {Example Map} -radix %x -contents {{%b=11???? -bgcolor orange -label REG:%x -linecolor yellow -shape bus}
{%x=1F -bgcolor red -label ERROR -linecolor white -shape EVENT}
{%x=2C -bgcolor red -label ERROR -linecolor white -shape EVENT}
{%x=* -label %x -linecolor gray -shape bus}}

#
# Conditions
#
set expression tb_accel_wrapper.accel_wrapper_inst.accel_fsm_inst.keccak_inst:buffer_in:din_buffer_in
if {[catch {condition new -name  condition -expr $expression}] != ""} {
    condition set -using condition -expr $expression
}

array unset createdGroup
array set createdGroup {}
set id [waveform add -signals [subst  {
	{[format {tb_accel_wrapper.accel_wrapper_inst.accel_fsm_inst.rst_n}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {tb_accel_wrapper.accel_wrapper_inst.clk}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {tb_accel_wrapper.accel_wrapper_inst.done}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {tb_accel_wrapper.accel_wrapper_inst.accel_fsm_inst.start}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {tb_accel_wrapper.accel_wrapper_inst.accel_fsm_inst.state}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {tb_accel_wrapper.accel_wrapper_inst.accel_fsm_inst.start_hash}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {tb_accel_wrapper.accel_wrapper_inst.ram_inst.mem[0:41]}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {tb_accel_wrapper.accel_wrapper_inst.accel_fsm_inst.keccak_inst:din}]}
	} ]]
waveform hierarchy collapse $id
set id [waveform add -signals [subst  {
	{[format {tb_accel_wrapper.accel_wrapper_inst.accel_fsm_inst.keccak_inst:din_valid}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {tb_accel_wrapper.accel_wrapper_inst.accel_fsm_inst.keccak_inst:dout}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {tb_accel_wrapper.accel_wrapper_inst.accel_fsm_inst.keccak_inst:dout_valid}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {tb_accel_wrapper.accel_wrapper_inst.accel_fsm_inst.keccak_inst:last_block}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {tb_accel_wrapper.accel_wrapper_inst.accel_fsm_inst.keccak_inst:permutation_computed}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {tb_accel_wrapper.accel_wrapper_inst.accel_fsm_inst.keccak_inst:ready}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {tb_accel_wrapper.accel_wrapper_inst.accel_fsm_inst.keccak_inst:reg_data}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {tb_accel_wrapper.accel_wrapper_inst.accel_fsm_inst.keccak_inst:round_in}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {tb_accel_wrapper.accel_wrapper_inst.accel_fsm_inst.keccak_inst:round_out}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {tb_accel_wrapper.accel_wrapper_inst.accel_fsm_inst.keccak_inst:start}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {tb_accel_wrapper.accel_wrapper_inst.accel_fsm_inst.keccak_inst:buffer_full}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {tb_accel_wrapper.accel_wrapper_inst.accel_fsm_inst.keccak_inst:buffer_in:buffer_data}]}
	} ]]
set id [waveform add -signals [subst  {
	{[format {tb_accel_wrapper.accel_wrapper_inst.accel_fsm_inst.keccak_inst:buffer_in:mode}]}
	} ]]

waveform xview limits 208739781fs 1550917061fs
